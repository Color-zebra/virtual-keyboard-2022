{"version":3,"file":"script.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN4B;;AAE5B;AACA;AACA;AACA,oFAAoF;AACpF,gCAAgC;AAChC,0HAA0H;AAC1H;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA,KAAK;AACL;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC,EAAE,OAAO,EAAE,iDAAiD;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","sources":["webpack:///./task/sass/style.scss","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./task/pages/js.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../sass/style.scss';\n\nwindow.onload = () => {\n  const BODY = document.body;\n  const rusLabel = 'ё 1 2 3 4 5 6 7 8 9 0 - = Backspace Tab й ц у к е н г ш щ з х ъ \\\\ Del CapsLock ф ы в а п р о л д ж э Enter Shift я ч с м и т ь б ю . \\u2191 Shift Ctrl Win Alt Space Alt \\u2190 \\u2193 \\u2192 Ctrl'.split(' ');\n  const engLabel = '` 1 2 3 4 5 6 7 8 9 0 - = Backspace Tab q w e r t y u i o p { } \\\\ Del CapsLock a s d f g h j k l : \\' Enter Shift z x c v b n m , . / \\u2191 Shift Ctrl Win Alt Space Alt \\u2190 \\u2193 \\u2192 Ctrl'.split(' ');\n  const rusShifted = 'Ё ! \" № ; % : ? * ( ) - = Backspace Tab Й Ц У К Е Н Г Ш Щ З Х Ъ \\\\ Del CapsLock Ф Ы В А П Р О Л Д Ж Э Enter Shift Я Ч С М И Т Ь Б Ю , \\u2191 Shift Ctrl Win Alt Space Alt \\u2190 \\u2193 \\u2192 Ctrl'.split(' ');\n  const engShifted = '~ ! @ # $ % ^ & * ( ) _ + Backspace Tab Q W E R T Y U I O P [ ] \\\\ Del CapsLock A S D F G H J K L ; \" Enter Shift Z X C V B N M < > ? \\u2191 Shift Ctrl Win Alt Space Alt \\u2190 \\u2193 \\u2192 Ctrl'.split(' ');\n  const keys = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'Delete', 'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter', 'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight', 'ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\n  const letterKeys = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash'];\n\n  let text;\n\n  /* =================================================FLAGS====================== */\n  const changeLang = new Set();\n  let lang = localStorage.getItem('lang') || 'eng';\n\n  let capsFlag = false;\n  let shiftFlag = false;\n  let shiftPressed = false;\n\n  /* ===================================RENDER KEYBOARD FUNCTIONS================ */\n\n  function createKey(className) {\n    const key = document.createElement('div');\n    key.setAttribute('class', 'key');\n    key.setAttribute('data-key', `${className}`);\n    key.setAttribute('id', `${className}`);\n    key.classList.add(className);\n    key.setAttribute('tabindex', '1');\n    return key;\n  }\n\n  function renderKeyboard() {\n    const keyboardWrapper = document.createElement('div');\n    keyboardWrapper.setAttribute('class', 'keyboard__wrapper');\n    BODY.prepend(keyboardWrapper);\n    keys.forEach((item) => keyboardWrapper.appendChild(createKey(item)));\n  }\n\n  function renderTextArea() {\n    const textAreaWrapper = document.createElement('div');\n    const textArea = document.createElement('textarea');\n    textAreaWrapper.setAttribute('class', 'text-area__wrapper');\n    textAreaWrapper.prepend(textArea);\n    textArea.setAttribute('class', 'text-area');\n    textArea.setAttribute('placeholder', 'Для переключения раскладки используйте сочетание Shift + Ctrl. При нажатии клавиш мышью первой следует нажимать Shift.');\n    textArea.setAttribute('id', 'text-area');\n    textArea.setAttribute('cols', '84');\n    textArea.setAttribute('rows', '20');\n    textArea.setAttribute('autofocus', 'autofocus');\n    BODY.prepend(textAreaWrapper);\n\n    text = document.getElementById('text-area');\n    text.onblur = () => {\n      const selected = [text.selectionEnd, text.selectionStart];\n      text.focus();\n      [text.selectionEnd, text.selectionStart] = selected;\n    };\n  }\n\n  function renderKeyLabels() {\n    let labels;\n    if (capsFlag || shiftFlag) {\n      labels = (lang === 'rus') ? rusShifted : engShifted;\n    } else {\n      labels = (lang === 'rus') ? rusLabel : engLabel;\n    }\n    const allKeys = document.getElementsByClassName('key');\n    for (let i = 0; i < allKeys.length; i += 1) {\n      allKeys[i].textContent = labels[i];\n    }\n  }\n\n  function renderDescription() {\n    const description = document.createElement('div');\n    description.innerHTML = `\n    <p>Для переключения языка используй сочетание Shift + Ctrl. При нажатии клавишь мышью, первым следует нажимать Shift</p>\n    <ul>В задании использовались следующие фишки ES6:\n      <li>const and let</li>\n      <li>destructuring assignment</li>\n      <li>arrow functions</li>\n      <li>Set</li>\n    </ul>\n    <div id=\"toggler\" class=\"description__button\">Скрыть</div>\n    `;\n    description.classList.add('description');\n    description.setAttribute('id', 'description');\n    BODY.prepend(description);\n  }\n\n  function descriptionToggler() {\n    const toggleButton = document.getElementById('toggler');\n    const description = document.getElementById('description');\n    toggleButton.onclick = () => {\n      description.classList.toggle('hidden');\n      if (description.classList.contains('hidden')) {\n        toggleButton.innerText = 'ПОКАЗАТЬ';\n      } else {\n        toggleButton.innerText = 'СКРЫТЬ';\n      }\n    };\n  }\n\n  /* ===========================================NAVIGATION FUNCTIONS=============== */\n  function getCurrentTextArray() {\n    let value = text.value.split('\\n');\n    value = value.map((item) => {\n      const result = `${item} `;\n      return result;\n    });\n    const result = [];\n    for (let i = 0; i < value.length; i += 1) {\n      if (value[i].length <= 84) {\n        result.push(value[i]);\n      } else {\n        const string = value[i].slice(0, 90);\n        const other = value[i].slice(90);\n        result.push(string);\n        value[i] = other;\n        i -= 1;\n      }\n    }\n    return result;\n  }\n\n  function getCaretInfo(textArray) {\n    const caretPosition = text.selectionStart + 1;\n    let caretPositionString = 0;\n    let counter = 0;\n    let symbolsInPrevString = 0;\n    let symbolsInNxtString = 0;\n    for (let i = 0; i < textArray.length; i += 1) {\n      counter += textArray[i].length;\n      if (counter >= caretPosition) {\n        caretPositionString = i + 1;\n        break;\n      }\n    }\n\n    if (caretPosition > textArray[0].length) {\n      for (let i = 0; i < caretPositionString - 1; i += 1) {\n        symbolsInPrevString += textArray[i].length;\n      }\n    } else {\n      symbolsInPrevString = 'first string';\n    }\n\n    if (caretPositionString < textArray.length) {\n      for (let i = 0; i < caretPositionString + 1; i += 1) {\n        symbolsInNxtString += textArray[i].length;\n      }\n    } else {\n      symbolsInNxtString = 'last string';\n    }\n\n    const posInCurrString = (caretPosition > textArray[0].length)\n      ? caretPosition - symbolsInPrevString : caretPosition;\n    return {\n      position: caretPosition,\n      curentString: caretPositionString,\n      symbolsInPreviousStrings: symbolsInPrevString,\n      symbolsInNextString: symbolsInNxtString,\n      positionInCurrentString: posInCurrString,\n    };\n  }\n  function caretUp() {\n    const textArray = getCurrentTextArray();\n    const caretInfo = getCaretInfo(textArray);\n    if (caretInfo.symbolsInPreviousStrings === 'first string') {\n      return;\n    }\n    const symbolsInTargetString = textArray[caretInfo.curentString - 2].length;\n    if (symbolsInTargetString < caretInfo.positionInCurrentString) {\n      text.selectionStart = caretInfo.symbolsInPreviousStrings - 1;\n    } else {\n      text.selectionStart = caretInfo.symbolsInPreviousStrings - 1\n   - symbolsInTargetString + caretInfo.positionInCurrentString;\n    }\n    text.selectionEnd = text.selectionStart;\n  }\n\n  function caretDown() {\n    const textArray = getCurrentTextArray();\n    const caretInfo = getCaretInfo(textArray);\n    if (caretInfo.symbolsInNextString === 'last string') {\n      return;\n    }\n    const symbolsInTargetString = textArray[caretInfo.curentString].length;\n    if (symbolsInTargetString < caretInfo.positionInCurrentString) {\n      text.selectionStart = caretInfo.symbolsInNextString - 1;\n    } else {\n      text.selectionStart = caretInfo.symbolsInNextString - 1\n   - symbolsInTargetString + caretInfo.positionInCurrentString;\n    }\n    text.selectionEnd = text.selectionStart;\n  }\n\n  function caretLeft() {\n    if (text.selectionStart === 0) {\n      return;\n    }\n    text.selectionStart -= 1;\n    text.selectionEnd = text.selectionStart;\n  }\n\n  function caretRight() {\n    if (text.value.length === text.selectionStart) {\n      return;\n    }\n    text.selectionStart += 1;\n    text.selectionEnd = text.selectionStart;\n  }\n\n  /* ==================input functions======================= */\n  function addSymbolToTextArea(symbol) {\n    const selected = [text.selectionEnd, text.selectionStart];\n    const letter = (capsFlag || shiftFlag) ? symbol.toUpperCase() : symbol.toLowerCase();\n    text.value = `${text.value.slice(0, selected[1])}${letter}${text.value.slice(selected[0], text.value.length)}`;\n    text.selectionStart = selected[1] + 1;\n    text.selectionEnd = selected[0] + 1;\n    if (shiftFlag && !shiftPressed) {\n      document.getElementById('ShiftLeft').classList.remove('_active');\n      document.getElementById('ShiftRight').classList.remove('_active');\n      shiftFlag = false;\n      renderKeyLabels();\n    }\n  }\n  function addSpaceToTextArea() {\n    text.value = `${text.value} `;\n  }\n  function removeSymbolFromLeft() {\n    const selected = [text.selectionEnd, text.selectionStart];\n    const isSelected = Boolean(selected[0] - selected[1]);\n    if (isSelected) {\n      text.value = text.value.slice(0, selected[1])\n      + text.value.slice(selected[0], text.value.length);\n      [, text.selectionStart] = selected;\n      text.selectionEnd = text.selectionStart;\n      return;\n    }\n    if (text.value) {\n      text.value = text.value.slice(0, selected[1] - 1)\n      + text.value.slice(selected[0], text.value.length);\n    }\n\n    text.selectionStart = selected[1] - 1;\n    text.selectionEnd = text.selectionStart;\n  }\n  function removeSymbolFromRight() {\n    const selected = [text.selectionEnd, text.selectionStart];\n    const isSelected = Boolean(selected[0] - selected[1]);\n    if (isSelected) {\n      text.value = text.value.slice(0, selected[1])\n      + text.value.slice(selected[0], text.value.length);\n      [, text.selectionStart] = selected;\n      text.selectionEnd = text.selectionStart;\n      return;\n    } if (text.value) {\n      text.value = text.value.slice(0, selected[1])\n      + text.value.slice(selected[0] + 1, text.value.length);\n    }\n    [text.selectionEnd, text.selectionStart] = selected;\n  }\n\n  /* ===========================================REGISTER TOGGLERS================ */\n  function capsLockToggler() {\n    capsFlag = !capsFlag;\n    renderKeyLabels();\n  }\n\n  function shiftToggler() {\n    shiftFlag = !shiftFlag;\n    renderKeyLabels();\n  }\n  /* =====================================KEY PRESS HANDLER===================================== */\n  function changeLanguage() {\n    if ((changeLang.has('ShiftLeft') || changeLang.has('ShiftRight')) && (changeLang.has('ControlLeft') || changeLang.has('ControlRight'))) {\n      lang = (lang === 'rus') ? 'eng' : 'rus';\n      localStorage.setItem('lang', lang);\n      renderKeyLabels();\n    }\n  }\n\n  document.onkeydown = (e) => {\n    e.preventDefault();\n    if (letterKeys.includes(e.code)) {\n      const letter = document.getElementById(`${e.code}`).innerText;\n      addSymbolToTextArea(letter);\n    }\n    if (e.code === 'Space') {\n      addSpaceToTextArea();\n    }\n    if (e.code === 'Backspace') {\n      removeSymbolFromLeft();\n    }\n    if (e.code === 'Delete') {\n      removeSymbolFromRight();\n    }\n    if (e.code === 'CapsLock') {\n      capsLockToggler();\n      document.getElementById(`${e.code}`).classList.toggle('_active');\n      return;\n    }\n    if ((e.code === 'ShiftLeft' || e.code === 'ShiftRight') && e.repeat === false) {\n      shiftToggler();\n      shiftPressed = true;\n    }\n    if (e.code === 'Enter') {\n      addSymbolToTextArea('\\n');\n    }\n    if (e.code === 'Tab') {\n      addSymbolToTextArea('\\t');\n    }\n    if (e.code === 'ArrowUp') {\n      caretUp();\n    }\n    if (e.code === 'ArrowDown') {\n      caretDown();\n    }\n    if (e.code === 'ArrowLeft') {\n      caretLeft();\n    }\n    if (e.code === 'ArrowRight') {\n      caretRight();\n    }\n    changeLang.add(e.code);\n    const key = document.getElementById(`${e.code}`);\n    key.classList.add('_active');\n    changeLanguage();\n  };\n  document.onkeyup = (e) => {\n    e.preventDefault();\n    if (e.code === 'CapsLock') {\n      return;\n    }\n    if (e.code === 'ShiftLeft' || e.code === 'ShiftRight') {\n      shiftToggler();\n      shiftPressed = false;\n    }\n    changeLang.delete(e.code);\n    const key = document.getElementById(`${e.code}`);\n    key.classList.remove('_active');\n  };\n\n  /* ===========================================MOUSE CLICK HANDLER==================== */\n  document.onclick = (e) => {\n    const keyAttr = e.target.getAttribute('data-key');\n    if (letterKeys.includes(keyAttr)) {\n      addSymbolToTextArea(e.target.innerText);\n    }\n    if (keyAttr === 'Space') {\n      addSpaceToTextArea();\n    }\n    if (keyAttr === 'Backspace') {\n      removeSymbolFromLeft();\n    }\n    if (keyAttr === 'Delete') {\n      removeSymbolFromRight();\n    }\n    if (keyAttr === 'CapsLock') {\n      capsLockToggler();\n      document.getElementById(`${keyAttr}`).classList.toggle('_active');\n      return;\n    }\n    if (keyAttr === 'ShiftLeft' || keyAttr === 'ShiftRight') {\n      shiftToggler();\n      document.getElementById(`${keyAttr}`).classList.toggle('_active');\n    }\n    if (keyAttr === 'Enter') {\n      addSymbolToTextArea('\\n');\n    }\n    if (keyAttr === 'Tab') {\n      addSymbolToTextArea('\\t');\n    }\n    if (keyAttr === 'ArrowUp') {\n      caretUp();\n    }\n    if (keyAttr === 'ArrowDown') {\n      caretDown();\n    }\n    if (keyAttr === 'ArrowLeft') {\n      caretLeft();\n    }\n    if (keyAttr === 'ArrowRight') {\n      caretRight();\n    }\n    if (keyAttr === 'ControlLeft' || keyAttr === 'ControlRight') {\n      if (shiftFlag) {\n        lang = (lang === 'rus') ? 'eng' : 'rus';\n        localStorage.setItem('lang', lang);\n        document.getElementById('ShiftLeft').classList.remove('_active');\n        document.getElementById('ShiftRight').classList.remove('_active');\n        shiftFlag = false;\n        renderKeyLabels();\n      }\n    }\n  };\n\n  function renderPage() {\n    renderKeyboard();\n    renderTextArea();\n    renderKeyLabels();\n    renderDescription();\n    descriptionToggler();\n  }\n\n  renderPage();\n};\n"],"names":[],"sourceRoot":""}